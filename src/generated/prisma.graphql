# source: https://us1.prisma.sh/michel-alexander-d63487/dsptchr-prisma/dev
# timestamp: Sat Apr 27 2019 16:18:27 GMT-0700 (PDT)

type AggregateLocation {
  count: Int!
}

type AggregateMission {
  count: Int!
}

type AggregatePayment {
  count: Int!
}

type AggregateSocialLinks {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

type Location implements Node {
  id: ID!
  lat: Float!
  lng: Float!
}

"""A connection to a list of items."""
type LocationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [LocationEdge]!
  aggregate: AggregateLocation!
}

input LocationCreateInput {
  id: ID
  lat: Float!
  lng: Float!
}

input LocationCreateOneInput {
  create: LocationCreateInput
  connect: LocationWhereUniqueInput
}

"""An edge in a connection."""
type LocationEdge {
  """The item at the end of the edge."""
  node: Location!

  """A cursor for use in pagination."""
  cursor: String!
}

enum LocationOrderByInput {
  id_ASC
  id_DESC
  lat_ASC
  lat_DESC
  lng_ASC
  lng_DESC
}

type LocationPreviousValues {
  id: ID!
  lat: Float!
  lng: Float!
}

type LocationSubscriptionPayload {
  mutation: MutationType!
  node: Location
  updatedFields: [String!]
  previousValues: LocationPreviousValues
}

input LocationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [LocationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [LocationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LocationSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: LocationWhereInput
}

input LocationUpdateDataInput {
  lat: Float
  lng: Float
}

input LocationUpdateInput {
  lat: Float
  lng: Float
}

input LocationUpdateManyMutationInput {
  lat: Float
  lng: Float
}

input LocationUpdateOneInput {
  create: LocationCreateInput
  connect: LocationWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: LocationUpdateDataInput
  upsert: LocationUpsertNestedInput
}

input LocationUpsertNestedInput {
  update: LocationUpdateDataInput!
  create: LocationCreateInput!
}

input LocationWhereInput {
  """Logical AND on all given filters."""
  AND: [LocationWhereInput!]

  """Logical OR on all given filters."""
  OR: [LocationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LocationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lat: Float

  """All values that are not equal to given value."""
  lat_not: Float

  """All values that are contained in given list."""
  lat_in: [Float!]

  """All values that are not contained in given list."""
  lat_not_in: [Float!]

  """All values less than the given value."""
  lat_lt: Float

  """All values less than or equal the given value."""
  lat_lte: Float

  """All values greater than the given value."""
  lat_gt: Float

  """All values greater than or equal the given value."""
  lat_gte: Float
  lng: Float

  """All values that are not equal to given value."""
  lng_not: Float

  """All values that are contained in given list."""
  lng_in: [Float!]

  """All values that are not contained in given list."""
  lng_not_in: [Float!]

  """All values less than the given value."""
  lng_lt: Float

  """All values less than or equal the given value."""
  lng_lte: Float

  """All values greater than the given value."""
  lng_gt: Float

  """All values greater than or equal the given value."""
  lng_gte: Float
}

input LocationWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mission implements Node {
  id: ID!
  active: Boolean
  asap: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  description: String
  due: DateTime
  icon: String
  online: Boolean
  postedBy: String!
  title: String
  type: String
  value: Int
}

"""A connection to a list of items."""
type MissionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MissionEdge]!
  aggregate: AggregateMission!
}

input MissionCreateInput {
  id: ID
  active: Boolean
  asap: Boolean
  description: String
  due: DateTime
  icon: String
  online: Boolean
  postedBy: String!
  title: String
  type: String
  value: Int
}

input MissionCreateOneInput {
  create: MissionCreateInput
  connect: MissionWhereUniqueInput
}

"""An edge in a connection."""
type MissionEdge {
  """The item at the end of the edge."""
  node: Mission!

  """A cursor for use in pagination."""
  cursor: String!
}

enum MissionOrderByInput {
  id_ASC
  id_DESC
  active_ASC
  active_DESC
  asap_ASC
  asap_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  description_ASC
  description_DESC
  due_ASC
  due_DESC
  icon_ASC
  icon_DESC
  online_ASC
  online_DESC
  postedBy_ASC
  postedBy_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  value_ASC
  value_DESC
}

type MissionPreviousValues {
  id: ID!
  active: Boolean
  asap: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  description: String
  due: DateTime
  icon: String
  online: Boolean
  postedBy: String!
  title: String
  type: String
  value: Int
}

type MissionSubscriptionPayload {
  mutation: MutationType!
  node: Mission
  updatedFields: [String!]
  previousValues: MissionPreviousValues
}

input MissionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MissionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MissionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MissionSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MissionWhereInput
}

input MissionUpdateDataInput {
  active: Boolean
  asap: Boolean
  description: String
  due: DateTime
  icon: String
  online: Boolean
  postedBy: String
  title: String
  type: String
  value: Int
}

input MissionUpdateInput {
  active: Boolean
  asap: Boolean
  description: String
  due: DateTime
  icon: String
  online: Boolean
  postedBy: String
  title: String
  type: String
  value: Int
}

input MissionUpdateManyMutationInput {
  active: Boolean
  asap: Boolean
  description: String
  due: DateTime
  icon: String
  online: Boolean
  postedBy: String
  title: String
  type: String
  value: Int
}

input MissionUpdateOneRequiredInput {
  create: MissionCreateInput
  connect: MissionWhereUniqueInput
  update: MissionUpdateDataInput
  upsert: MissionUpsertNestedInput
}

input MissionUpsertNestedInput {
  update: MissionUpdateDataInput!
  create: MissionCreateInput!
}

input MissionWhereInput {
  """Logical AND on all given filters."""
  AND: [MissionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MissionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MissionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  active: Boolean

  """All values that are not equal to given value."""
  active_not: Boolean
  asap: Boolean

  """All values that are not equal to given value."""
  asap_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  due: DateTime

  """All values that are not equal to given value."""
  due_not: DateTime

  """All values that are contained in given list."""
  due_in: [DateTime!]

  """All values that are not contained in given list."""
  due_not_in: [DateTime!]

  """All values less than the given value."""
  due_lt: DateTime

  """All values less than or equal the given value."""
  due_lte: DateTime

  """All values greater than the given value."""
  due_gt: DateTime

  """All values greater than or equal the given value."""
  due_gte: DateTime
  icon: String

  """All values that are not equal to given value."""
  icon_not: String

  """All values that are contained in given list."""
  icon_in: [String!]

  """All values that are not contained in given list."""
  icon_not_in: [String!]

  """All values less than the given value."""
  icon_lt: String

  """All values less than or equal the given value."""
  icon_lte: String

  """All values greater than the given value."""
  icon_gt: String

  """All values greater than or equal the given value."""
  icon_gte: String

  """All values containing the given string."""
  icon_contains: String

  """All values not containing the given string."""
  icon_not_contains: String

  """All values starting with the given string."""
  icon_starts_with: String

  """All values not starting with the given string."""
  icon_not_starts_with: String

  """All values ending with the given string."""
  icon_ends_with: String

  """All values not ending with the given string."""
  icon_not_ends_with: String
  online: Boolean

  """All values that are not equal to given value."""
  online_not: Boolean
  postedBy: String

  """All values that are not equal to given value."""
  postedBy_not: String

  """All values that are contained in given list."""
  postedBy_in: [String!]

  """All values that are not contained in given list."""
  postedBy_not_in: [String!]

  """All values less than the given value."""
  postedBy_lt: String

  """All values less than or equal the given value."""
  postedBy_lte: String

  """All values greater than the given value."""
  postedBy_gt: String

  """All values greater than or equal the given value."""
  postedBy_gte: String

  """All values containing the given string."""
  postedBy_contains: String

  """All values not containing the given string."""
  postedBy_not_contains: String

  """All values starting with the given string."""
  postedBy_starts_with: String

  """All values not starting with the given string."""
  postedBy_not_starts_with: String

  """All values ending with the given string."""
  postedBy_ends_with: String

  """All values not ending with the given string."""
  postedBy_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  value: Int

  """All values that are not equal to given value."""
  value_not: Int

  """All values that are contained in given list."""
  value_in: [Int!]

  """All values that are not contained in given list."""
  value_not_in: [Int!]

  """All values less than the given value."""
  value_lt: Int

  """All values less than or equal the given value."""
  value_lte: Int

  """All values greater than the given value."""
  value_gt: Int

  """All values greater than or equal the given value."""
  value_gte: Int
}

input MissionWhereUniqueInput {
  id: ID
}

type Mutation {
  createUser(data: UserCreateInput!): User!
  createPayment(data: PaymentCreateInput!): Payment!
  createMission(data: MissionCreateInput!): Mission!
  createSocialLinks(data: SocialLinksCreateInput!): SocialLinks!
  createLocation(data: LocationCreateInput!): Location!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updatePayment(data: PaymentUpdateInput!, where: PaymentWhereUniqueInput!): Payment
  updateMission(data: MissionUpdateInput!, where: MissionWhereUniqueInput!): Mission
  updateSocialLinks(data: SocialLinksUpdateInput!, where: SocialLinksWhereUniqueInput!): SocialLinks
  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location
  deleteUser(where: UserWhereUniqueInput!): User
  deletePayment(where: PaymentWhereUniqueInput!): Payment
  deleteMission(where: MissionWhereUniqueInput!): Mission
  deleteSocialLinks(where: SocialLinksWhereUniqueInput!): SocialLinks
  deleteLocation(where: LocationWhereUniqueInput!): Location
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertPayment(where: PaymentWhereUniqueInput!, create: PaymentCreateInput!, update: PaymentUpdateInput!): Payment!
  upsertMission(where: MissionWhereUniqueInput!, create: MissionCreateInput!, update: MissionUpdateInput!): Mission!
  upsertSocialLinks(where: SocialLinksWhereUniqueInput!, create: SocialLinksCreateInput!, update: SocialLinksUpdateInput!): SocialLinks!
  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyPayments(data: PaymentUpdateManyMutationInput!, where: PaymentWhereInput): BatchPayload!
  updateManyMissions(data: MissionUpdateManyMutationInput!, where: MissionWhereInput): BatchPayload!
  updateManySocialLinkses(data: SocialLinksUpdateManyMutationInput!, where: SocialLinksWhereInput): BatchPayload!
  updateManyLocations(data: LocationUpdateManyMutationInput!, where: LocationWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyPayments(where: PaymentWhereInput): BatchPayload!
  deleteManyMissions(where: MissionWhereInput): BatchPayload!
  deleteManySocialLinkses(where: SocialLinksWhereInput): BatchPayload!
  deleteManyLocations(where: LocationWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Payment implements Node {
  id: ID!
  amount: Int!
  chargeId: String
  datePaid: DateTime
  from: String!
  type: String
  mission: Mission!
  payTo: String!
}

"""A connection to a list of items."""
type PaymentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PaymentEdge]!
  aggregate: AggregatePayment!
}

input PaymentCreateInput {
  id: ID
  amount: Int!
  chargeId: String
  datePaid: DateTime
  from: String!
  type: String
  payTo: String!
  mission: MissionCreateOneInput!
}

"""An edge in a connection."""
type PaymentEdge {
  """The item at the end of the edge."""
  node: Payment!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PaymentOrderByInput {
  id_ASC
  id_DESC
  amount_ASC
  amount_DESC
  chargeId_ASC
  chargeId_DESC
  datePaid_ASC
  datePaid_DESC
  from_ASC
  from_DESC
  type_ASC
  type_DESC
  payTo_ASC
  payTo_DESC
}

type PaymentPreviousValues {
  id: ID!
  amount: Int!
  chargeId: String
  datePaid: DateTime
  from: String!
  type: String
  payTo: String!
}

type PaymentSubscriptionPayload {
  mutation: MutationType!
  node: Payment
  updatedFields: [String!]
  previousValues: PaymentPreviousValues
}

input PaymentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PaymentWhereInput
}

input PaymentUpdateInput {
  amount: Int
  chargeId: String
  datePaid: DateTime
  from: String
  type: String
  payTo: String
  mission: MissionUpdateOneRequiredInput
}

input PaymentUpdateManyMutationInput {
  amount: Int
  chargeId: String
  datePaid: DateTime
  from: String
  type: String
  payTo: String
}

input PaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  amount: Int

  """All values that are not equal to given value."""
  amount_not: Int

  """All values that are contained in given list."""
  amount_in: [Int!]

  """All values that are not contained in given list."""
  amount_not_in: [Int!]

  """All values less than the given value."""
  amount_lt: Int

  """All values less than or equal the given value."""
  amount_lte: Int

  """All values greater than the given value."""
  amount_gt: Int

  """All values greater than or equal the given value."""
  amount_gte: Int
  chargeId: String

  """All values that are not equal to given value."""
  chargeId_not: String

  """All values that are contained in given list."""
  chargeId_in: [String!]

  """All values that are not contained in given list."""
  chargeId_not_in: [String!]

  """All values less than the given value."""
  chargeId_lt: String

  """All values less than or equal the given value."""
  chargeId_lte: String

  """All values greater than the given value."""
  chargeId_gt: String

  """All values greater than or equal the given value."""
  chargeId_gte: String

  """All values containing the given string."""
  chargeId_contains: String

  """All values not containing the given string."""
  chargeId_not_contains: String

  """All values starting with the given string."""
  chargeId_starts_with: String

  """All values not starting with the given string."""
  chargeId_not_starts_with: String

  """All values ending with the given string."""
  chargeId_ends_with: String

  """All values not ending with the given string."""
  chargeId_not_ends_with: String
  datePaid: DateTime

  """All values that are not equal to given value."""
  datePaid_not: DateTime

  """All values that are contained in given list."""
  datePaid_in: [DateTime!]

  """All values that are not contained in given list."""
  datePaid_not_in: [DateTime!]

  """All values less than the given value."""
  datePaid_lt: DateTime

  """All values less than or equal the given value."""
  datePaid_lte: DateTime

  """All values greater than the given value."""
  datePaid_gt: DateTime

  """All values greater than or equal the given value."""
  datePaid_gte: DateTime
  from: String

  """All values that are not equal to given value."""
  from_not: String

  """All values that are contained in given list."""
  from_in: [String!]

  """All values that are not contained in given list."""
  from_not_in: [String!]

  """All values less than the given value."""
  from_lt: String

  """All values less than or equal the given value."""
  from_lte: String

  """All values greater than the given value."""
  from_gt: String

  """All values greater than or equal the given value."""
  from_gte: String

  """All values containing the given string."""
  from_contains: String

  """All values not containing the given string."""
  from_not_contains: String

  """All values starting with the given string."""
  from_starts_with: String

  """All values not starting with the given string."""
  from_not_starts_with: String

  """All values ending with the given string."""
  from_ends_with: String

  """All values not ending with the given string."""
  from_not_ends_with: String
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  payTo: String

  """All values that are not equal to given value."""
  payTo_not: String

  """All values that are contained in given list."""
  payTo_in: [String!]

  """All values that are not contained in given list."""
  payTo_not_in: [String!]

  """All values less than the given value."""
  payTo_lt: String

  """All values less than or equal the given value."""
  payTo_lte: String

  """All values greater than the given value."""
  payTo_gt: String

  """All values greater than or equal the given value."""
  payTo_gte: String

  """All values containing the given string."""
  payTo_contains: String

  """All values not containing the given string."""
  payTo_not_contains: String

  """All values starting with the given string."""
  payTo_starts_with: String

  """All values not starting with the given string."""
  payTo_not_starts_with: String

  """All values ending with the given string."""
  payTo_ends_with: String

  """All values not ending with the given string."""
  payTo_not_ends_with: String
  mission: MissionWhereInput
}

input PaymentWhereUniqueInput {
  id: ID
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment]!
  missions(where: MissionWhereInput, orderBy: MissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Mission]!
  socialLinkses(where: SocialLinksWhereInput, orderBy: SocialLinksOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SocialLinks]!
  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!
  user(where: UserWhereUniqueInput!): User
  payment(where: PaymentWhereUniqueInput!): Payment
  mission(where: MissionWhereUniqueInput!): Mission
  socialLinks(where: SocialLinksWhereUniqueInput!): SocialLinks
  location(where: LocationWhereUniqueInput!): Location
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  paymentsConnection(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentConnection!
  missionsConnection(where: MissionWhereInput, orderBy: MissionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MissionConnection!
  socialLinksesConnection(where: SocialLinksWhereInput, orderBy: SocialLinksOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SocialLinksConnection!
  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type SocialLinks implements Node {
  id: ID!
  facebook: String
  instagram: String
  snapchat: String
  twitter: String
  website: String
}

"""A connection to a list of items."""
type SocialLinksConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SocialLinksEdge]!
  aggregate: AggregateSocialLinks!
}

input SocialLinksCreateInput {
  id: ID
  facebook: String
  instagram: String
  snapchat: String
  twitter: String
  website: String
}

input SocialLinksCreateOneInput {
  create: SocialLinksCreateInput
  connect: SocialLinksWhereUniqueInput
}

"""An edge in a connection."""
type SocialLinksEdge {
  """The item at the end of the edge."""
  node: SocialLinks!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SocialLinksOrderByInput {
  id_ASC
  id_DESC
  facebook_ASC
  facebook_DESC
  instagram_ASC
  instagram_DESC
  snapchat_ASC
  snapchat_DESC
  twitter_ASC
  twitter_DESC
  website_ASC
  website_DESC
}

type SocialLinksPreviousValues {
  id: ID!
  facebook: String
  instagram: String
  snapchat: String
  twitter: String
  website: String
}

type SocialLinksSubscriptionPayload {
  mutation: MutationType!
  node: SocialLinks
  updatedFields: [String!]
  previousValues: SocialLinksPreviousValues
}

input SocialLinksSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SocialLinksSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SocialLinksSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SocialLinksSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SocialLinksWhereInput
}

input SocialLinksUpdateDataInput {
  facebook: String
  instagram: String
  snapchat: String
  twitter: String
  website: String
}

input SocialLinksUpdateInput {
  facebook: String
  instagram: String
  snapchat: String
  twitter: String
  website: String
}

input SocialLinksUpdateManyMutationInput {
  facebook: String
  instagram: String
  snapchat: String
  twitter: String
  website: String
}

input SocialLinksUpdateOneInput {
  create: SocialLinksCreateInput
  connect: SocialLinksWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SocialLinksUpdateDataInput
  upsert: SocialLinksUpsertNestedInput
}

input SocialLinksUpsertNestedInput {
  update: SocialLinksUpdateDataInput!
  create: SocialLinksCreateInput!
}

input SocialLinksWhereInput {
  """Logical AND on all given filters."""
  AND: [SocialLinksWhereInput!]

  """Logical OR on all given filters."""
  OR: [SocialLinksWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SocialLinksWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  facebook: String

  """All values that are not equal to given value."""
  facebook_not: String

  """All values that are contained in given list."""
  facebook_in: [String!]

  """All values that are not contained in given list."""
  facebook_not_in: [String!]

  """All values less than the given value."""
  facebook_lt: String

  """All values less than or equal the given value."""
  facebook_lte: String

  """All values greater than the given value."""
  facebook_gt: String

  """All values greater than or equal the given value."""
  facebook_gte: String

  """All values containing the given string."""
  facebook_contains: String

  """All values not containing the given string."""
  facebook_not_contains: String

  """All values starting with the given string."""
  facebook_starts_with: String

  """All values not starting with the given string."""
  facebook_not_starts_with: String

  """All values ending with the given string."""
  facebook_ends_with: String

  """All values not ending with the given string."""
  facebook_not_ends_with: String
  instagram: String

  """All values that are not equal to given value."""
  instagram_not: String

  """All values that are contained in given list."""
  instagram_in: [String!]

  """All values that are not contained in given list."""
  instagram_not_in: [String!]

  """All values less than the given value."""
  instagram_lt: String

  """All values less than or equal the given value."""
  instagram_lte: String

  """All values greater than the given value."""
  instagram_gt: String

  """All values greater than or equal the given value."""
  instagram_gte: String

  """All values containing the given string."""
  instagram_contains: String

  """All values not containing the given string."""
  instagram_not_contains: String

  """All values starting with the given string."""
  instagram_starts_with: String

  """All values not starting with the given string."""
  instagram_not_starts_with: String

  """All values ending with the given string."""
  instagram_ends_with: String

  """All values not ending with the given string."""
  instagram_not_ends_with: String
  snapchat: String

  """All values that are not equal to given value."""
  snapchat_not: String

  """All values that are contained in given list."""
  snapchat_in: [String!]

  """All values that are not contained in given list."""
  snapchat_not_in: [String!]

  """All values less than the given value."""
  snapchat_lt: String

  """All values less than or equal the given value."""
  snapchat_lte: String

  """All values greater than the given value."""
  snapchat_gt: String

  """All values greater than or equal the given value."""
  snapchat_gte: String

  """All values containing the given string."""
  snapchat_contains: String

  """All values not containing the given string."""
  snapchat_not_contains: String

  """All values starting with the given string."""
  snapchat_starts_with: String

  """All values not starting with the given string."""
  snapchat_not_starts_with: String

  """All values ending with the given string."""
  snapchat_ends_with: String

  """All values not ending with the given string."""
  snapchat_not_ends_with: String
  twitter: String

  """All values that are not equal to given value."""
  twitter_not: String

  """All values that are contained in given list."""
  twitter_in: [String!]

  """All values that are not contained in given list."""
  twitter_not_in: [String!]

  """All values less than the given value."""
  twitter_lt: String

  """All values less than or equal the given value."""
  twitter_lte: String

  """All values greater than the given value."""
  twitter_gt: String

  """All values greater than or equal the given value."""
  twitter_gte: String

  """All values containing the given string."""
  twitter_contains: String

  """All values not containing the given string."""
  twitter_not_contains: String

  """All values starting with the given string."""
  twitter_starts_with: String

  """All values not starting with the given string."""
  twitter_not_starts_with: String

  """All values ending with the given string."""
  twitter_ends_with: String

  """All values not ending with the given string."""
  twitter_not_ends_with: String
  website: String

  """All values that are not equal to given value."""
  website_not: String

  """All values that are contained in given list."""
  website_in: [String!]

  """All values that are not contained in given list."""
  website_not_in: [String!]

  """All values less than the given value."""
  website_lt: String

  """All values less than or equal the given value."""
  website_lte: String

  """All values greater than the given value."""
  website_gt: String

  """All values greater than or equal the given value."""
  website_gte: String

  """All values containing the given string."""
  website_contains: String

  """All values not containing the given string."""
  website_not_contains: String

  """All values starting with the given string."""
  website_starts_with: String

  """All values not starting with the given string."""
  website_not_starts_with: String

  """All values ending with the given string."""
  website_ends_with: String

  """All values not ending with the given string."""
  website_not_ends_with: String
}

input SocialLinksWhereUniqueInput {
  id: ID
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  payment(where: PaymentSubscriptionWhereInput): PaymentSubscriptionPayload
  mission(where: MissionSubscriptionWhereInput): MissionSubscriptionPayload
  socialLinks(where: SocialLinksSubscriptionWhereInput): SocialLinksSubscriptionPayload
  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  avatar: String
  badges: [String!]!
  bike: Boolean
  bio: String
  btcAddress: String
  car: Boolean
  codeName: String
  email: String!
  ethAddress: String
  firstName: String
  lastName: String
  level: Int
  location: Location
  ltcAddress: String
  password: String
  points: String
  referredBy: String
  skills: [String!]!
  socialLinks: SocialLinks
  stripeAccount: String
  stripeCustomer: String
  trophies: [String!]!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreatebadgesInput {
  set: [String!]
}

input UserCreateInput {
  id: ID
  name: String!
  avatar: String
  bike: Boolean
  bio: String
  btcAddress: String
  car: Boolean
  codeName: String
  email: String!
  ethAddress: String
  firstName: String
  lastName: String
  level: Int
  ltcAddress: String
  password: String
  points: String
  referredBy: String
  stripeAccount: String
  stripeCustomer: String
  badges: UserCreatebadgesInput
  skills: UserCreateskillsInput
  trophies: UserCreatetrophiesInput
  location: LocationCreateOneInput
  socialLinks: SocialLinksCreateOneInput
}

input UserCreateskillsInput {
  set: [String!]
}

input UserCreatetrophiesInput {
  set: [String!]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  avatar_ASC
  avatar_DESC
  bike_ASC
  bike_DESC
  bio_ASC
  bio_DESC
  btcAddress_ASC
  btcAddress_DESC
  car_ASC
  car_DESC
  codeName_ASC
  codeName_DESC
  email_ASC
  email_DESC
  ethAddress_ASC
  ethAddress_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  level_ASC
  level_DESC
  ltcAddress_ASC
  ltcAddress_DESC
  password_ASC
  password_DESC
  points_ASC
  points_DESC
  referredBy_ASC
  referredBy_DESC
  stripeAccount_ASC
  stripeAccount_DESC
  stripeCustomer_ASC
  stripeCustomer_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  avatar: String
  badges: [String!]!
  bike: Boolean
  bio: String
  btcAddress: String
  car: Boolean
  codeName: String
  email: String!
  ethAddress: String
  firstName: String
  lastName: String
  level: Int
  ltcAddress: String
  password: String
  points: String
  referredBy: String
  skills: [String!]!
  stripeAccount: String
  stripeCustomer: String
  trophies: [String!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdatebadgesInput {
  set: [String!]
}

input UserUpdateInput {
  name: String
  avatar: String
  bike: Boolean
  bio: String
  btcAddress: String
  car: Boolean
  codeName: String
  email: String
  ethAddress: String
  firstName: String
  lastName: String
  level: Int
  ltcAddress: String
  password: String
  points: String
  referredBy: String
  stripeAccount: String
  stripeCustomer: String
  badges: UserUpdatebadgesInput
  skills: UserUpdateskillsInput
  trophies: UserUpdatetrophiesInput
  location: LocationUpdateOneInput
  socialLinks: SocialLinksUpdateOneInput
}

input UserUpdateManyMutationInput {
  name: String
  avatar: String
  bike: Boolean
  bio: String
  btcAddress: String
  car: Boolean
  codeName: String
  email: String
  ethAddress: String
  firstName: String
  lastName: String
  level: Int
  ltcAddress: String
  password: String
  points: String
  referredBy: String
  stripeAccount: String
  stripeCustomer: String
  badges: UserUpdatebadgesInput
  skills: UserUpdateskillsInput
  trophies: UserUpdatetrophiesInput
}

input UserUpdateskillsInput {
  set: [String!]
}

input UserUpdatetrophiesInput {
  set: [String!]
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  avatar: String

  """All values that are not equal to given value."""
  avatar_not: String

  """All values that are contained in given list."""
  avatar_in: [String!]

  """All values that are not contained in given list."""
  avatar_not_in: [String!]

  """All values less than the given value."""
  avatar_lt: String

  """All values less than or equal the given value."""
  avatar_lte: String

  """All values greater than the given value."""
  avatar_gt: String

  """All values greater than or equal the given value."""
  avatar_gte: String

  """All values containing the given string."""
  avatar_contains: String

  """All values not containing the given string."""
  avatar_not_contains: String

  """All values starting with the given string."""
  avatar_starts_with: String

  """All values not starting with the given string."""
  avatar_not_starts_with: String

  """All values ending with the given string."""
  avatar_ends_with: String

  """All values not ending with the given string."""
  avatar_not_ends_with: String
  bike: Boolean

  """All values that are not equal to given value."""
  bike_not: Boolean
  bio: String

  """All values that are not equal to given value."""
  bio_not: String

  """All values that are contained in given list."""
  bio_in: [String!]

  """All values that are not contained in given list."""
  bio_not_in: [String!]

  """All values less than the given value."""
  bio_lt: String

  """All values less than or equal the given value."""
  bio_lte: String

  """All values greater than the given value."""
  bio_gt: String

  """All values greater than or equal the given value."""
  bio_gte: String

  """All values containing the given string."""
  bio_contains: String

  """All values not containing the given string."""
  bio_not_contains: String

  """All values starting with the given string."""
  bio_starts_with: String

  """All values not starting with the given string."""
  bio_not_starts_with: String

  """All values ending with the given string."""
  bio_ends_with: String

  """All values not ending with the given string."""
  bio_not_ends_with: String
  btcAddress: String

  """All values that are not equal to given value."""
  btcAddress_not: String

  """All values that are contained in given list."""
  btcAddress_in: [String!]

  """All values that are not contained in given list."""
  btcAddress_not_in: [String!]

  """All values less than the given value."""
  btcAddress_lt: String

  """All values less than or equal the given value."""
  btcAddress_lte: String

  """All values greater than the given value."""
  btcAddress_gt: String

  """All values greater than or equal the given value."""
  btcAddress_gte: String

  """All values containing the given string."""
  btcAddress_contains: String

  """All values not containing the given string."""
  btcAddress_not_contains: String

  """All values starting with the given string."""
  btcAddress_starts_with: String

  """All values not starting with the given string."""
  btcAddress_not_starts_with: String

  """All values ending with the given string."""
  btcAddress_ends_with: String

  """All values not ending with the given string."""
  btcAddress_not_ends_with: String
  car: Boolean

  """All values that are not equal to given value."""
  car_not: Boolean
  codeName: String

  """All values that are not equal to given value."""
  codeName_not: String

  """All values that are contained in given list."""
  codeName_in: [String!]

  """All values that are not contained in given list."""
  codeName_not_in: [String!]

  """All values less than the given value."""
  codeName_lt: String

  """All values less than or equal the given value."""
  codeName_lte: String

  """All values greater than the given value."""
  codeName_gt: String

  """All values greater than or equal the given value."""
  codeName_gte: String

  """All values containing the given string."""
  codeName_contains: String

  """All values not containing the given string."""
  codeName_not_contains: String

  """All values starting with the given string."""
  codeName_starts_with: String

  """All values not starting with the given string."""
  codeName_not_starts_with: String

  """All values ending with the given string."""
  codeName_ends_with: String

  """All values not ending with the given string."""
  codeName_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  ethAddress: String

  """All values that are not equal to given value."""
  ethAddress_not: String

  """All values that are contained in given list."""
  ethAddress_in: [String!]

  """All values that are not contained in given list."""
  ethAddress_not_in: [String!]

  """All values less than the given value."""
  ethAddress_lt: String

  """All values less than or equal the given value."""
  ethAddress_lte: String

  """All values greater than the given value."""
  ethAddress_gt: String

  """All values greater than or equal the given value."""
  ethAddress_gte: String

  """All values containing the given string."""
  ethAddress_contains: String

  """All values not containing the given string."""
  ethAddress_not_contains: String

  """All values starting with the given string."""
  ethAddress_starts_with: String

  """All values not starting with the given string."""
  ethAddress_not_starts_with: String

  """All values ending with the given string."""
  ethAddress_ends_with: String

  """All values not ending with the given string."""
  ethAddress_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  level: Int

  """All values that are not equal to given value."""
  level_not: Int

  """All values that are contained in given list."""
  level_in: [Int!]

  """All values that are not contained in given list."""
  level_not_in: [Int!]

  """All values less than the given value."""
  level_lt: Int

  """All values less than or equal the given value."""
  level_lte: Int

  """All values greater than the given value."""
  level_gt: Int

  """All values greater than or equal the given value."""
  level_gte: Int
  ltcAddress: String

  """All values that are not equal to given value."""
  ltcAddress_not: String

  """All values that are contained in given list."""
  ltcAddress_in: [String!]

  """All values that are not contained in given list."""
  ltcAddress_not_in: [String!]

  """All values less than the given value."""
  ltcAddress_lt: String

  """All values less than or equal the given value."""
  ltcAddress_lte: String

  """All values greater than the given value."""
  ltcAddress_gt: String

  """All values greater than or equal the given value."""
  ltcAddress_gte: String

  """All values containing the given string."""
  ltcAddress_contains: String

  """All values not containing the given string."""
  ltcAddress_not_contains: String

  """All values starting with the given string."""
  ltcAddress_starts_with: String

  """All values not starting with the given string."""
  ltcAddress_not_starts_with: String

  """All values ending with the given string."""
  ltcAddress_ends_with: String

  """All values not ending with the given string."""
  ltcAddress_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  points: String

  """All values that are not equal to given value."""
  points_not: String

  """All values that are contained in given list."""
  points_in: [String!]

  """All values that are not contained in given list."""
  points_not_in: [String!]

  """All values less than the given value."""
  points_lt: String

  """All values less than or equal the given value."""
  points_lte: String

  """All values greater than the given value."""
  points_gt: String

  """All values greater than or equal the given value."""
  points_gte: String

  """All values containing the given string."""
  points_contains: String

  """All values not containing the given string."""
  points_not_contains: String

  """All values starting with the given string."""
  points_starts_with: String

  """All values not starting with the given string."""
  points_not_starts_with: String

  """All values ending with the given string."""
  points_ends_with: String

  """All values not ending with the given string."""
  points_not_ends_with: String
  referredBy: String

  """All values that are not equal to given value."""
  referredBy_not: String

  """All values that are contained in given list."""
  referredBy_in: [String!]

  """All values that are not contained in given list."""
  referredBy_not_in: [String!]

  """All values less than the given value."""
  referredBy_lt: String

  """All values less than or equal the given value."""
  referredBy_lte: String

  """All values greater than the given value."""
  referredBy_gt: String

  """All values greater than or equal the given value."""
  referredBy_gte: String

  """All values containing the given string."""
  referredBy_contains: String

  """All values not containing the given string."""
  referredBy_not_contains: String

  """All values starting with the given string."""
  referredBy_starts_with: String

  """All values not starting with the given string."""
  referredBy_not_starts_with: String

  """All values ending with the given string."""
  referredBy_ends_with: String

  """All values not ending with the given string."""
  referredBy_not_ends_with: String
  stripeAccount: String

  """All values that are not equal to given value."""
  stripeAccount_not: String

  """All values that are contained in given list."""
  stripeAccount_in: [String!]

  """All values that are not contained in given list."""
  stripeAccount_not_in: [String!]

  """All values less than the given value."""
  stripeAccount_lt: String

  """All values less than or equal the given value."""
  stripeAccount_lte: String

  """All values greater than the given value."""
  stripeAccount_gt: String

  """All values greater than or equal the given value."""
  stripeAccount_gte: String

  """All values containing the given string."""
  stripeAccount_contains: String

  """All values not containing the given string."""
  stripeAccount_not_contains: String

  """All values starting with the given string."""
  stripeAccount_starts_with: String

  """All values not starting with the given string."""
  stripeAccount_not_starts_with: String

  """All values ending with the given string."""
  stripeAccount_ends_with: String

  """All values not ending with the given string."""
  stripeAccount_not_ends_with: String
  stripeCustomer: String

  """All values that are not equal to given value."""
  stripeCustomer_not: String

  """All values that are contained in given list."""
  stripeCustomer_in: [String!]

  """All values that are not contained in given list."""
  stripeCustomer_not_in: [String!]

  """All values less than the given value."""
  stripeCustomer_lt: String

  """All values less than or equal the given value."""
  stripeCustomer_lte: String

  """All values greater than the given value."""
  stripeCustomer_gt: String

  """All values greater than or equal the given value."""
  stripeCustomer_gte: String

  """All values containing the given string."""
  stripeCustomer_contains: String

  """All values not containing the given string."""
  stripeCustomer_not_contains: String

  """All values starting with the given string."""
  stripeCustomer_starts_with: String

  """All values not starting with the given string."""
  stripeCustomer_not_starts_with: String

  """All values ending with the given string."""
  stripeCustomer_ends_with: String

  """All values not ending with the given string."""
  stripeCustomer_not_ends_with: String
  location: LocationWhereInput
  socialLinks: SocialLinksWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
